{"version":3,"sources":["assets/images/portrait/small sync /^/avatar/-s/-.*$","assets/images/portrait/small/avatar-s-1.jpg","assets/images/portrait/small/avatar-s-10.jpg","assets/images/portrait/small/avatar-s-12.jpg","assets/images/portrait/small/avatar-s-13.jpg","assets/images/portrait/small/avatar-s-14.jpg","assets/images/portrait/small/avatar-s-15.jpg","assets/images/portrait/small/avatar-s-16.jpg","assets/images/portrait/small/avatar-s-17.jpg","assets/images/portrait/small/avatar-s-18.jpg","assets/images/portrait/small/avatar-s-19.jpg","assets/images/portrait/small/avatar-s-2.jpg","assets/images/portrait/small/avatar-s-20.jpg","assets/images/portrait/small/avatar-s-21.jpg","assets/images/portrait/small/avatar-s-22.jpg","assets/images/portrait/small/avatar-s-23.jpg","assets/images/portrait/small/avatar-s-24.jpg","assets/images/portrait/small/avatar-s-25.jpg","assets/images/portrait/small/avatar-s-26.jpg","assets/images/portrait/small/avatar-s-3.jpg","assets/images/portrait/small/avatar-s-4.jpg","assets/images/portrait/small/avatar-s-5.jpg","assets/images/portrait/small/avatar-s-6.jpg","assets/images/portrait/small/avatar-s-7.jpg","assets/images/portrait/small/avatar-s-8.jpg","assets/images/portrait/small/avatar-s-9.jpg","@core/components/widgets/stats/StatsHorizontal.js","views/dashboard/activeAdmissions.js","views/dashboard/activeHealth.js","views/dashboard/commonDiseases.js","views/dashboard/policyTiles.js","views/dashboard/policies.js","views/dashboard/table_data.js","views/dashboard/table_actions.js","views/dashboard/tableServerSide.js","views/dashboard/index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","StatsHorizontal","icon","color","stats","statTitle","className","Card","CardBody","ActiveAdmissions","props","useState","data","setData","useEffect","axios","get","then","res","options","plotOptions","pie","donut","labels","show","total","chart","toolbar","dataLabels","enabled","legend","comparedResult","stroke","width","colors","primary","warning","danger","CardHeader","CardTitle","tag","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","last_days","item","DropdownItem","series","type","height","chart_info","index","IconTag","Icon","classnames","length","size","iconColor","name","usage","title","participantCount","totalDays","leader","daysLeft","ActiveHealth","content","person","constProgressValue","progressBarClass","Row","Col","xs","Progress","value","imgClassName","imgHeight","imgWidth","img","CommonDiseases","radialBar","hollow","track","strokeWidth","margin","fontSize","fontWeight","offsetY","label","formatter","lineCap","dropShadow","blur","left","top","opacity","finished","pending","rejected","PolicyTiles","heading","maleCount","femaleCount","color1","color2","curve","fill","grid","padding","bottom","startAngle","val","parseInt","style","Policies","zoom","offsetX","borderColor","gradient","shade","inverseColors","gradientToColors","shadeIntensity","opacityFrom","opacityTo","stops","markers","hover","xaxis","fontFamily","axisTicks","categories","axisBorder","tickPlacement","yaxis","tickAmount","toFixed","tooltip","x","lg","CardText","response","serverSideColumns","selector","sortable","minWidth","cell","row","textDecoration","hospitalName","hospitalAddress","getData","params","dispatch","a","allData","invoices","totalPages","DataTableServerSide","useDispatch","useSelector","state","dataTables","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","searchValue","page","perPage","q","sm","Label","for","Input","onChange","target","handlePerPage","noHeader","pagination","paginationServer","columns","sortIcon","paginationComponent","count","Number","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","empName","designation","admissionDate","estDischargeDate","admissionReason","memo","Dashboard","context","useContext","ThemeColors","main"],"mappings":"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","file":"static/js/7.21146c12.chunk.js","sourcesContent":["var map = {\n\t\"./avatar-s-1.jpg\": 225,\n\t\"./avatar-s-10.jpg\": 226,\n\t\"./avatar-s-11.jpg\": 123,\n\t\"./avatar-s-12.jpg\": 227,\n\t\"./avatar-s-13.jpg\": 228,\n\t\"./avatar-s-14.jpg\": 229,\n\t\"./avatar-s-15.jpg\": 230,\n\t\"./avatar-s-16.jpg\": 231,\n\t\"./avatar-s-17.jpg\": 232,\n\t\"./avatar-s-18.jpg\": 233,\n\t\"./avatar-s-19.jpg\": 234,\n\t\"./avatar-s-2.jpg\": 235,\n\t\"./avatar-s-20.jpg\": 236,\n\t\"./avatar-s-21.jpg\": 237,\n\t\"./avatar-s-22.jpg\": 238,\n\t\"./avatar-s-23.jpg\": 239,\n\t\"./avatar-s-24.jpg\": 240,\n\t\"./avatar-s-25.jpg\": 241,\n\t\"./avatar-s-26.jpg\": 242,\n\t\"./avatar-s-3.jpg\": 243,\n\t\"./avatar-s-4.jpg\": 244,\n\t\"./avatar-s-5.jpg\": 245,\n\t\"./avatar-s-6.jpg\": 246,\n\t\"./avatar-s-7.jpg\": 247,\n\t\"./avatar-s-8.jpg\": 248,\n\t\"./avatar-s-9.jpg\": 249\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 224;","export default __webpack_public_path__ + \"static/media/avatar-s-1.d383013d.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-10.79a4ca26.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-12.09119fd6.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-13.41f43dab.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-14.ea440a6a.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-15.37a99cd4.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-16.1850b51c.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-17.ac876056.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-18.9af4f6d3.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-19.f39063a2.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-2.d21f2121.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-20.40d668f5.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-21.d383013d.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-22.d21f2121.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-23.c1d416e5.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-24.a649af23.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-25.301316d5.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-26.974f64da.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-3.c1d416e5.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-4.a649af23.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-5.301316d5.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-6.974f64da.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-7.ba3f6823.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-8.e9b18971.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-9.e2785e7a.jpg\";","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, statTitle, className, ...rest }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            <h2 className='font-weight-bolder mb-0'>{stats}</h2>\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  className: PropTypes.string\n}\n","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport classnames from 'classnames'\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardTitle,\r\n    CardBody,\r\n    UncontrolledDropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    DropdownToggle\r\n} from 'reactstrap'\r\nimport Chart from 'react-apexcharts'\r\nimport * as Icon from 'react-feather'\r\n\r\nconst ActiveAdmissions = props => {\r\n    const [data, setData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        axios.get('/card/card-analytics/sessions-device').then(res => setData(res.data))\r\n    }, [])\r\n\r\n    const options = {\r\n        plotOptions: {\r\n            pie: {\r\n                donut: {\r\n                    labels: {\r\n                        show: true,\r\n                        total: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        chart: {\r\n            toolbar: {\r\n                show: false\r\n            }\r\n        },\r\n        labels: ['Employees', 'Spouse', 'Children'],\r\n        dataLabels: {\r\n            enabled: true\r\n            // formatter(val, opt) {\r\n            //     return `${parseInt(val)}`\r\n            // }\r\n        },\r\n\r\n        legend: { show: false },\r\n        comparedResult: [2, -3, 8],\r\n        stroke: { width: 0 },\r\n        colors: [props.primary, props.warning, props.danger]\r\n    },\r\n        series = [3, 5, 7]\r\n\r\n    const renderChartInfo = () => {\r\n        return data.chart_info.map((item, index) => {\r\n            const IconTag = Icon[item.icon]\r\n            return (\r\n                <div\r\n                    key={index}\r\n                    className={classnames('d-flex justify-content-between', {\r\n                        'mb-1': index !== data.chart_info.length - 1\r\n                    })}\r\n                >\r\n                    <div className='d-flex align-items-center'>\r\n                        <IconTag\r\n                            size={17}\r\n                            className={classnames({\r\n                                [item.iconColor]: item.iconColor\r\n                            })}\r\n                        />\r\n                        <span className='font-weight-bold ml-75 mr-25'>{item.name}</span>\r\n                        {/* <span>- {item.usage}</span> */}\r\n                    </div>\r\n                    <div>\r\n                        <span>{item.usage}</span>\r\n                        {/* {item.upDown > 0 ? ( */}\r\n                            {/* <Icon.ArrowUp size={14} className='ml-25 text-success' /> */}\r\n                        {/* ) : ( */}\r\n                            {/* <Icon.ArrowDown size={14} className='ml-25 text-danger' /> */}\r\n                        {/* )} */}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return data !== null ? (\r\n        <Card>\r\n            <CardHeader className='align-items-end'>\r\n                <CardTitle tag='h4'>Active Admissions</CardTitle>\r\n                <UncontrolledDropdown className='chart-dropdown'>\r\n                    <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\r\n                        Last 7 days\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                        {data.last_days.map(item => (\r\n                            <DropdownItem className='w-100' key={item}>\r\n                                {item}\r\n                            </DropdownItem>\r\n                        ))}\r\n                    </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <Chart className='my-1' options={options} series={series} type='donut' height={300} />\r\n                {renderChartInfo()}\r\n            </CardBody>\r\n        </Card>\r\n    ) : null\r\n}\r\nexport default ActiveAdmissions\r\n","import { Card, CardBody, CardTitle, Row, Col, Progress } from \"reactstrap\"\r\nimport Avatar from \"../../@core/components/avatar\"\r\nconst data = [\r\n  {\r\n    title: \"#FitestWomen\",\r\n    participantCount: 150,\r\n    totalDays: 20,\r\n    name: \"Neha\",\r\n    leader: true,\r\n    daysLeft: 10\r\n  },\r\n  {\r\n    title: \"#Fitin 40\",\r\n    participantCount: 100,\r\n    totalDays: 20,\r\n    name: \"Rahul\",\r\n    leader: true,\r\n    daysLeft: 5\r\n  },\r\n  {\r\n    title: \"#10KStepsDaily\",\r\n    participantCount: 80,\r\n    totalDays: 20,\r\n    daysLeft: 15,\r\n    name: \"Sachin\",\r\n    leader: true\r\n  }\r\n]\r\n\r\nexport const ActiveHealth = ({ title }) => {\r\n  const content = data.map((person, index) => {\r\n    const constProgressValue = 100 - ((person.daysLeft / person.totalDays) * 100)\r\n    let progressBarClass = \"progress-bar-danger\"\r\n    if (constProgressValue < 50) {\r\n      progressBarClass = \"progress-bar-success\"\r\n    } else if (constProgressValue < 75) {\r\n      progressBarClass = \"progress-bar-warning\"\r\n    }\r\n    return (\r\n      // <Row key={index}>\r\n      //   <Col xs=\"12\">\r\n      //     <div className=\"d-flex justify-content-between align-items-center mb-1 mt-1\">\r\n      //       <div>\r\n      //         <h2>{person.title}</h2>\r\n      //         <h5>{person.participantCount} Participants</h5>\r\n      //       </div>\r\n      //       <div className=\"mr-1 d-flex justify-content-md-around align-items-center\">\r\n      //         <span className=\"mr-1\">\r\n      //           <h4>{person.name}</h4>\r\n      //           {person.leader && <div>Leading</div>}\r\n      //           <div>{person.daysLeft} Days Left</div>\r\n      //         </span>\r\n      //         <span>\r\n      //           <Avatar\r\n      //             imgClassName=\"avatar\"\r\n      //             imgHeight={90}\r\n      //             imgWidth={90}\r\n      //             img=\"static/media/avatar-s-11.1d46cc62.jpg\"\r\n      //           />\r\n      //         </span>\r\n      //       </div>\r\n      //     </div>\r\n      //   </Col>\r\n      //   <Col xs=\"12\">\r\n      //     <Progress\r\n      //       className={`avg-session-progress mt-25 ${progressBarClass}`}\r\n      //       value={constProgressValue}\r\n      //     />\r\n      //   </Col>\r\n      // </Row>\r\n      <Row key={index} className='my-3 ml-2 mr-1'>\r\n        <Col xs='9'>\r\n          <div>\r\n            <h2>{person.title}</h2>\r\n            <h5>{person.participantCount} Participants</h5>\r\n            <div>\r\n\r\n              <Progress\r\n                className={`avg-session-progress mt-25 ${progressBarClass}`}\r\n                value={constProgressValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xs='3'>\r\n          <div className=\"mr-1 d-flex justify-content-md-around align-items-center\">\r\n            <span>\r\n              <h4>{person.name}</h4>\r\n              {person.leader && <div>Leading</div>}\r\n              <div>{person.daysLeft} Days Left</div>\r\n            </span>\r\n            <span>\r\n              <Avatar\r\n                imgClassName=\"avatar\"\r\n                imgHeight={65}\r\n                imgWidth={65}\r\n                img=\"static/media/avatar-s-11.1d46cc62.jpg\"\r\n              />\r\n            </span>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  })\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Row>\r\n          <Col xs=\"12\">\r\n            <CardTitle className=\"mb-2\">{title}</CardTitle>\r\n          </Col>\r\n        </Row>\r\n        {content}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\nimport Chart from 'react-apexcharts'\r\nimport { Circle } from 'react-feather'\r\n\r\nconst CommonDiseases = props => {\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-analytics/product-orders').then(res => setData(res.data))\r\n  }, null)\r\n\r\n  const options = {\r\n      labels: ['Finished', 'Pending', 'Rejected'],\r\n      plotOptions: {\r\n        radialBar: {\r\n          size: 150,\r\n          hollow: {\r\n            size: '20%'\r\n          },\r\n          track: {\r\n            strokeWidth: '100%',\r\n            margin: 15\r\n          },\r\n          dataLabels: {\r\n            value: {\r\n              fontSize: '1rem',\r\n              colors: '#5e5873',\r\n              fontWeight: '500',\r\n              offsetY: 5\r\n            },\r\n            total: {\r\n              show: true,\r\n              label: 'Total',\r\n              fontSize: '1.286rem',\r\n              colors: '#5e5873',\r\n              fontWeight: '500',\r\n\r\n              formatter() {\r\n                // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\r\n                return 42459\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      colors: [props.primary, props.warning, props.danger],\r\n      stroke: {\r\n        lineCap: 'round'\r\n      },\r\n      chart: {\r\n        height: 355,\r\n        dropShadow: {\r\n          enabled: true,\r\n          blur: 3,\r\n          left: 1,\r\n          top: 1,\r\n          opacity: 0.1\r\n        }\r\n      }\r\n    },\r\n    series = [70, 52, 26]\r\n\r\n  return data !== null ? (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Common Diseases</CardTitle>\r\n        <UncontrolledDropdown className='chart-dropdown'>\r\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\r\n            Last 7 days\r\n          </DropdownToggle>\r\n          <DropdownMenu right>\r\n            {data.last_days.map(item => (\r\n              <DropdownItem className='w-100' key={item}>\r\n                {item}\r\n              </DropdownItem>\r\n            ))}\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Chart options={options} series={series} type='radialBar' height={300} />\r\n        <div className='d-flex justify-content-between mb-1'>\r\n          <div className='d-flex align-items-center'>\r\n            <Circle size={15} className='text-primary' />\r\n            <span className='font-weight-bold ml-75'>Heart Attacks</span>\r\n          </div>\r\n          <span>{data.chart_info.finished}</span>\r\n        </div>\r\n        <div className='d-flex justify-content-between mb-1'>\r\n          <div className='d-flex align-items-center'>\r\n            <Circle size={15} className='text-warning' />\r\n            <span className='font-weight-bold ml-75'>Covid</span>\r\n          </div>\r\n          <span>{data.chart_info.pending}</span>\r\n        </div>\r\n        <div className='d-flex justify-content-between'>\r\n          <div className='d-flex align-items-center'>\r\n            <Circle size={15} className='text-danger' />\r\n            <span className='font-weight-bold ml-75'>Typhoid</span>\r\n          </div>\r\n          <span>{data.chart_info.rejected}</span>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  ) : null\r\n}\r\nexport default CommonDiseases\r\n","import Chart from \"react-apexcharts\"\r\nimport { User, Users } from \"react-feather\"\r\nimport { Card } from \"reactstrap\"\r\nimport CardBody from \"reactstrap/lib/CardBody\"\r\n\r\nexport const PolicyTiles = ({\r\n  heading,\r\n  maleCount,\r\n  femaleCount,\r\n  color1,\r\n  color2\r\n}) => {\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: { show: false },\r\n    labels: [\"Male\", \"Female\"],\r\n    stroke: { width: 0, show: true, curve: \"smooth\" },\r\n    colors: [color1, color2],\r\n    fill: { colors: [color1, color2] },\r\n    grid: {\r\n      padding: {\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0\r\n      }\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        startAngle: -10,\r\n        donut: {\r\n          labels: {\r\n            show: false,\r\n            name: {\r\n              offsetY: 15\r\n            },\r\n            value: {\r\n              offsetY: -15,\r\n              formatter(val) {\r\n                return `${parseInt(val)} %`\r\n              }\r\n            },\r\n            total: {\r\n              show: false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <div className=\"d-flex justify-content-md-around align-items-center\">\r\n          <div>\r\n            <p className=\"card-text\">{heading}</p>\r\n            <div>\r\n              <span className=\"mr-1\" style={{ color: color1 }}>\r\n                <User />\r\n                {maleCount}\r\n              </span>\r\n              <span style={{ color: color2 }}>\r\n                <Users />\r\n                {femaleCount}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Chart\r\n              options={options}\r\n              series={[maleCount, femaleCount]}\r\n              type=\"donut\"\r\n              height={70}\r\n              width={70}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import Chart from 'react-apexcharts'\r\nimport { Settings } from 'react-feather'\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\r\nimport { PolicyTiles } from './policyTiles'\r\n\r\nconst Policies = props => {\r\n  const options = {\r\n    chart: {\r\n      toolbar: { show: false },\r\n      zoom: { enabled: false },\r\n      type: 'line',\r\n      dropShadow: {\r\n        enabled: true,\r\n        top: 18,\r\n        left: 2,\r\n        blur: 5,\r\n        opacity: 0.2\r\n      },\r\n      offsetX: -10\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 4\r\n    },\r\n    grid: {\r\n      borderColor: '#ebe9f1',\r\n      padding: {\r\n        top: -20,\r\n        bottom: 5,\r\n        left: 20\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    colors: ['#df87f2', '#eb3411'],\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shade: 'dark',\r\n        inverseColors: false,\r\n        gradientToColors: [props.primary],\r\n        shadeIntensity: 1,\r\n        type: 'horizontal',\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [0, 100, 100, 100]\r\n      }\r\n    },\r\n    markers: {\r\n      size: 0,\r\n      hover: {\r\n        size: 5\r\n      }\r\n    },\r\n    xaxis: {\r\n      labels: {\r\n        offsetY: 5,\r\n        style: {\r\n          colors: '#b9b9c3',\r\n          fontSize: '0.857rem',\r\n          fontFamily: 'Montserrat'\r\n        }\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      },\r\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      tickPlacement: 'on'\r\n    },\r\n    yaxis: {\r\n      tickAmount: 5,\r\n      labels: {\r\n        style: {\r\n          colors: '#b9b9c3',\r\n          fontSize: '0.857rem',\r\n          fontFamily: 'Montserrat'\r\n        },\r\n        formatter(val) {\r\n          return val > 999 ? `${(val / 1000).toFixed(1)}k` : val\r\n        }\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  },\r\n    series = [\r\n      {\r\n        name: 'Family Floater Plan',\r\n        data: [140, 180, 150, 205, 160, 295, 125, 255, 205, 305, 240, 295]\r\n      },\r\n      {\r\n        name: 'Joint Health insurance',\r\n        data: [150, 160, 170, 195, 150, 245, 215, 275, 285, 315, 220, 205]\r\n      }\r\n    ]\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className='align-items-start'>\r\n        <CardTitle className='mb-25 col-md-12' tag='h4' >\r\n          Policies\r\n        </CardTitle>\r\n        <Row className='col-md-12 p-0'>\r\n          <Col lg='3'>\r\n            <PolicyTiles heading=\"Policy plan 1\" color1=\"#28c76f\" color2=\"#28c7ff\" maleCount={20} femaleCount={40} />\r\n          </Col>\r\n          <Col lg='3'>\r\n            <PolicyTiles heading=\"Policy plan 2\" color1=\"#28c76f\" color2=\"#28c7ff\" maleCount={20} femaleCount={40} />\r\n          </Col>\r\n          <Col lg='3'>\r\n            <PolicyTiles heading=\"Policy plan 3\" color1=\"#28c76f\" color2=\"#28c7ff\" maleCount={20} femaleCount={40} />\r\n          </Col>\r\n          <Col lg='3'>\r\n            <PolicyTiles heading=\"Policy plan 4\" color1=\"#28c76f\" color2=\"#28c7ff\" maleCount={20} femaleCount={40} />\r\n          </Col>\r\n        </Row>\r\n        <CardText className='mb-0 col-md-12'>\r\n          <span> Policy Usage </span>\r\n          <span className='ml-5 mr-2'> <i className='circle bg-red m-r-2p'></i> Family Floater Plan</span>\r\n          <span> <i className='circle bg-green m-r-2p'></i> Joint Health insurance</span>\r\n        </CardText>\r\n      </CardHeader>\r\n      <CardBody className='pb-0'>\r\n        <Chart options={options} series={series} type='line' height={240} />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default Policies\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { MoreVertical, Edit, FileText, Archive, Trash, MapPin } from 'react-feather'\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\n\r\n// ** Vars\r\nconst states = ['success', 'danger', 'warning', 'info', 'dark', 'primary', 'secondary']\r\n\r\nconst status = {\r\n  1: { title: 'Current', color: 'light-primary' },\r\n  2: { title: 'Professional', color: 'light-success' },\r\n  3: { title: 'Rejected', color: 'light-danger' },\r\n  4: { title: 'Resigned', color: 'light-warning' },\r\n  5: { title: 'Applied', color: 'light-info' }\r\n}\r\n\r\nexport let data\r\n\r\n// ** Get initial Data\r\naxios.get('/api/datatables/initial-data').then(response => {\r\n  data = response.data\r\n})\r\n\r\n// ** Table Zero Config Column\r\nexport const basicColumns = [\r\n  {\r\n    name: 'ID',\r\n    selector: 'id',\r\n    sortable: true,\r\n    maxWidth: '100px'\r\n  },\r\n  {\r\n    name: 'Name',\r\n    selector: 'full_name',\r\n    sortable: true,\r\n    minWidth: '225px'\r\n  },\r\n  {\r\n    name: 'Email',\r\n    selector: 'email',\r\n    sortable: true,\r\n    minWidth: '310px'\r\n  },\r\n  {\r\n    name: 'Position',\r\n    selector: 'post',\r\n    sortable: true,\r\n    minWidth: '250px'\r\n  },\r\n  {\r\n    name: 'Age',\r\n    selector: 'age',\r\n    sortable: true,\r\n    minWidth: '100px'\r\n  },\r\n  {\r\n    name: 'Salary',\r\n    selector: 'salary',\r\n    sortable: true,\r\n    minWidth: '175px'\r\n  }\r\n]\r\n\r\n// ** Expandable table component\r\nconst ExpandableTable = ({ data }) => {\r\n  return (\r\n    <div className='expandable-content p-2'>\r\n      <p>\r\n        <span className='font-weight-bold'>City:</span> {data.city}\r\n      </p>\r\n      <p>\r\n        <span className='font-weight-bold'>Experience:</span> {data.experience}\r\n      </p>\r\n      <p className='m-0'>\r\n        <span className='font-weight-bold'>Post:</span> {data.post}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\n// ** Table Common Column\r\nexport const columns = [\r\n  {\r\n    name: 'Name',\r\n    selector: 'full_name',\r\n    sortable: true,\r\n    minWidth: '250px',\r\n    cell: row => (\r\n      <div className='d-flex align-items-center'>\r\n        {row.avatar === '' ? (\r\n          <Avatar color={`light-${states[row.status]}`} content={row.full_name} initials />\r\n        ) : (\r\n          <Avatar img={require(`@src/assets/images/portrait/small/avatar-s-${row.avatar}`).default} />\r\n        )}\r\n        <div className='user-info text-truncate ml-1'>\r\n          <span className='d-block font-weight-bold text-truncate'>{row.full_name}</span>\r\n          <small>{row.post}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Email',\r\n    selector: 'email',\r\n    sortable: true,\r\n    minWidth: '250px'\r\n  },\r\n  {\r\n    name: 'Date',\r\n    selector: 'start_date',\r\n    sortable: true,\r\n    minWidth: '150px'\r\n  },\r\n\r\n  {\r\n    name: 'Salary',\r\n    selector: 'salary',\r\n    sortable: true,\r\n    minWidth: '150px'\r\n  },\r\n  {\r\n    name: 'Age',\r\n    selector: 'age',\r\n    sortable: true,\r\n    minWidth: '100px'\r\n  },\r\n  {\r\n    name: 'Status',\r\n    selector: 'status',\r\n    sortable: true,\r\n    minWidth: '150px',\r\n    cell: row => {\r\n      return (\r\n        <Badge color={status[row.status].color} pill>\r\n          {status[row.status].title}\r\n        </Badge>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    allowOverflow: true,\r\n    cell: row => {\r\n      return (\r\n        <div className='d-flex'>\r\n          <UncontrolledDropdown>\r\n            <DropdownToggle className='pr-1' tag='span'>\r\n              <MoreVertical size={15} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\r\n                <FileText size={15} />\r\n                <span className='align-middle ml-50'>Details</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\r\n                <Archive size={15} />\r\n                <span className='align-middle ml-50'>Archive</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\r\n                <Trash size={15} />\r\n                <span className='align-middle ml-50'>Delete</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n          <Edit size={15} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n]\r\n\r\n// ** Table Intl Column\r\nexport const multiLingColumns = [\r\n  {\r\n    name: 'Name',\r\n    selector: 'full_name',\r\n    sortable: true,\r\n    minWidth: '200px'\r\n  },\r\n  {\r\n    name: 'Position',\r\n    selector: 'post',\r\n    sortable: true,\r\n    minWidth: '250px'\r\n  },\r\n  {\r\n    name: 'Email',\r\n    selector: 'email',\r\n    sortable: true,\r\n    minWidth: '250px'\r\n  },\r\n  {\r\n    name: 'Date',\r\n    selector: 'start_date',\r\n    sortable: true,\r\n    minWidth: '150px'\r\n  },\r\n\r\n  {\r\n    name: 'Salary',\r\n    selector: 'salary',\r\n    sortable: true,\r\n    minWidth: '150px'\r\n  },\r\n  {\r\n    name: 'Status',\r\n    selector: 'status',\r\n    sortable: true,\r\n    minWidth: '150px',\r\n    cell: row => {\r\n      return (\r\n        <Badge color={status[row.status].color} pill>\r\n          {status[row.status].title}\r\n        </Badge>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    allowOverflow: true,\r\n    cell: row => {\r\n      return (\r\n        <div className='d-flex'>\r\n          <UncontrolledDropdown>\r\n            <DropdownToggle className='pr-1' tag='span'>\r\n              <MoreVertical size={15} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem>\r\n                <FileText size={15} />\r\n                <span className='align-middle ml-50'>Details</span>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <Archive size={15} />\r\n                <span className='align-middle ml-50'>Archive</span>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <Trash size={15} />\r\n                <span className='align-middle ml-50'>Delete</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n          <Edit size={15} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n]\r\n\r\n// ** Table Server Side Column\r\nexport const serverSideColumns = [\r\n  {\r\n    name: 'EMPLOYEE NAME',\r\n    selector: 'empName',\r\n    sortable: true,\r\n    minWidth: '225px'\r\n  },\r\n  {\r\n    name: 'HOSPITAL NAME',\r\n    sortable: true,\r\n    minWidth: '250px',\r\n    cell: (row) => {\r\n      const linkStyle = {\r\n        textDecoration: 'underline'\r\n      }\r\n      const mapPin = {\r\n        color: 'red'\r\n      }\r\n      return (\r\n        <div>\r\n          <div>\r\n            <a style={linkStyle}>{row.hospitalName}</a>\r\n            </div>\r\n            <div>\r\n              <MapPin style={mapPin} size={15} />\r\n              <span> {row.hospitalAddress}</span>\r\n            </div>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    name: 'DESIGNATION',\r\n    selector: 'designation',\r\n    sortable: true,\r\n    minWidth: '250px'\r\n  },\r\n  {\r\n    name: 'ADMISSION DATE',\r\n    selector: 'admissionDate',\r\n    sortable: true,\r\n    minWidth: '150px'\r\n  },\r\n  {\r\n    name: 'ESTIMATED DISCHARGE DATE',\r\n    selector: 'estDischargeDate',\r\n    sortable: true,\r\n    minWidth: '150px'\r\n  },\r\n  {\r\n    name: 'REASON OF ADMISSION',\r\n    selector: 'admissionReason',\r\n    sortable: true,\r\n    minWidth: '150px'\r\n  }\r\n]\r\n\r\n// ** Table Adv Search Column\r\nexport const advSearchColumns = [\r\n  {\r\n    name: 'Name',\r\n    selector: 'full_name',\r\n    sortable: true,\r\n    minWidth: '200px'\r\n  },\r\n  {\r\n    name: 'Email',\r\n    selector: 'email',\r\n    sortable: true,\r\n    minWidth: '250px'\r\n  },\r\n  {\r\n    name: 'Post',\r\n    selector: 'post',\r\n    sortable: true,\r\n    minWidth: '250px'\r\n  },\r\n  {\r\n    name: 'City',\r\n    selector: 'city',\r\n    sortable: true,\r\n    minWidth: '150px'\r\n  },\r\n  {\r\n    name: 'Date',\r\n    selector: 'start_date',\r\n    sortable: true,\r\n    minWidth: '150px'\r\n  },\r\n\r\n  {\r\n    name: 'Salary',\r\n    selector: 'salary',\r\n    sortable: true,\r\n    minWidth: '100px'\r\n  }\r\n]\r\n\r\nexport default ExpandableTable\r\n","import axios from 'axios'\r\n\r\n// ** Get table Data\r\nexport const getData = params => {\r\n  return async dispatch => {\r\n    await axios.get('/api/datatables/data', params).then(response => {\r\n      dispatch({\r\n        type: 'GET_DATA',\r\n        allData: response.data.allData,\r\n        data: response.data.invoices,\r\n        totalPages: response.data.total,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect, memo } from 'react'\r\n\r\n// ** Table Columns\r\nimport { serverSideColumns } from './table_data'\r\n\r\n// ** Store & Actions\r\nimport { getData } from './table_actions'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport { Card, CardHeader, CardTitle, Input, Label, Row, Col } from 'reactstrap'\r\n\r\nconst DataTableServerSide = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.dataTables)\r\n\r\n  // ** States\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(7)\r\n  const [searchValue, setSearchValue] = useState('')\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        q: searchValue\r\n      })\r\n    )\r\n  }, [dispatch])\r\n\r\n  // ** Function to handle filter\r\n  const handleFilter = e => {\r\n    setSearchValue(e.target.value)\r\n\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        q: e.target.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Function to handle Pagination and get data\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        page: page.selected + 1,\r\n        perPage: rowsPerPage,\r\n        q: searchValue\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function to handle per page\r\n  const handlePerPage = e => {\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: parseInt(e.target.value),\r\n        q: searchValue\r\n      })\r\n    )\r\n    setRowsPerPage(parseInt(e.target.value))\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    // const count = Number((store.total / rowsPerPage).toFixed(0))\r\n    const count = Number((2 / rowsPerPage).toFixed(0))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        breakLabel='...'\r\n        pageCount={count || 1}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={2}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        breakClassName='page-item'\r\n        breakLinkClassName='page-link'\r\n        containerClassName={\r\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n\r\n\r\n    return [\r\n      {\r\n        id: 1,\r\n        empName: 'Rahul Saxena',\r\n        hospitalName: \"All India Institute of Medical Science\",\r\n        hospitalAddress: 'Grand Road, Mumbai - 400000',\r\n        designation: 'Manager',\r\n        admissionDate: '20-JAN-2021',\r\n        estDischargeDate: '24-JAN-2021',\r\n        admissionReason: 'Cardiac Arrest'\r\n      }\r\n    ]\r\n      \r\n    // const filters = {\r\n    //   q: searchValue\r\n    // }\r\n\r\n    // const isFiltered = Object.keys(filters).some(function (k) {\r\n    //   return filters[k].length > 0\r\n    // })\r\n\r\n    // if (store.data.length > 0) {\r\n    //   return store.data\r\n    // } else if (store.data.length === 0 && isFiltered) {\r\n    //   return []\r\n    // } else {\r\n    //   return store.allData.slice(0, rowsPerPage)\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='border-bottom'>\r\n          <CardTitle tag='h4'>Server Side</CardTitle>\r\n        </CardHeader>\r\n        <Row className='mx-0 mt-1 mb-50'>\r\n          <Col sm='6'>\r\n            <div className='d-flex align-items-center'>\r\n              <Label for='sort-select'>Show</Label>\r\n              <Col xs='2'>\r\n\r\n                <Input\r\n                  className='dataTable-select'\r\n                  type='number'\r\n                  id='sort-select'\r\n                  value={rowsPerPage}\r\n                  onChange={e => handlePerPage(e)}\r\n                />\r\n                  {/* <option value={7}>7</option>\r\n                  <option value={10}>10</option>\r\n                  <option value={25}>25</option>\r\n                  <option value={50}>50</option>\r\n                  <option value={75}>75</option>\r\n                  <option value={100}>100</option> */}\r\n                {/* </Input> */}\r\n              </Col>\r\n              <Label for='sort-select'>Entries</Label>\r\n            </div>\r\n          </Col>\r\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\r\n            {/* <Label className='mr-1' for='search-input'>\r\n              Search\r\n            </Label>\r\n            <Input\r\n              className='dataTable-filter'\r\n              type='text'\r\n              bsSize='sm'\r\n              id='search-input'\r\n              value={searchValue}\r\n              onChange={handleFilter}\r\n            /> */}\r\n          </Col>\r\n        </Row>\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          paginationServer\r\n          className='react-dataTable'\r\n          columns={serverSideColumns}\r\n          sortIcon={<ChevronDown size={10} />}\r\n          paginationComponent={CustomPagination}\r\n          data={dataToRender()}\r\n        />\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(DataTableServerSide)\r\n","import StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\r\nimport { useContext } from 'react'\r\nimport { Clock, Copy, DownloadCloud, Users } from 'react-feather'\r\nimport { Col, Row } from 'reactstrap'\r\nimport ActiveAdmissions from './activeAdmissions'\r\nimport { ActiveHealth } from './activeHealth'\r\nimport CommonDiseases from './commonDiseases'\r\nimport Policies from './policies'\r\nimport TableServerSide from './tableServerSide'\r\n\r\n\r\nconst Dashboard = () => {\r\n    const context = useContext(ThemeColors)\r\n    return (\r\n        <div>\r\n            <Row>\r\n                {/* Stats With Icons Horizontal */}\r\n                <Col lg='3' sm='6'>\r\n                    <StatsHorizontal icon={<Users size={21} />} color='primary' stats='136' statTitle='Employees' />\r\n                </Col>\r\n                <Col lg='3' sm='6'>\r\n                    <StatsHorizontal icon={<Copy size={21} />} color='success' stats='04' statTitle='Policies' />\r\n                </Col>\r\n                <Col lg='3' sm='6'>\r\n                    <StatsHorizontal icon={<Clock size={21} />} color='danger' stats='10' statTitle='Claims' />\r\n                </Col>\r\n                <Col lg='3' sm='6'>\r\n                    <StatsHorizontal icon={<DownloadCloud size={21} />} color='warning' stats='136' statTitle='E-Card Issued' />\r\n                </Col>\r\n                {/* Stats With Icons Horizontal */}\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg='8' sm='12'>\r\n                    <Policies></Policies>\r\n                </Col>\r\n                <Col lg='4' sm='12'>\r\n                    <ActiveAdmissions primary={context.colors.primary.main}\r\n                        warning={context.colors.warning.main}\r\n                        danger={context.colors.danger.main} />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col sm='12'>\r\n                    <TableServerSide />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col lg='4' sm='6'>\r\n                    <CommonDiseases  primary={context.colors.primary.main}\r\n                warning={context.colors.warning.main}\r\n                danger={context.colors.danger.main}/>\r\n                </Col>\r\n                <Col lg=\"8\" sm=\"6\">\r\n                    <ActiveHealth title=\"Active Health Challenges\" />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard"],"sourceRoot":""}