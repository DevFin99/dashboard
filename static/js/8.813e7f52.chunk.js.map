{"version":3,"sources":["@core/components/avatar/index.js","assets/images/portrait/small/avatar-s-11.jpg","utility/Utils.js","utility/context/Can.js","redux/actions/layout/index.js","@core/layouts/components/layout-wrapper/index.js","router/routes/index.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/auth/jwt/jwtDefaultConfig.js","auth/jwt/useJwt.js","redux/actions/auth/index.js","@core/auth/jwt/useJwt.js","@core/auth/jwt/jwtService.js","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","navigation/horizontal/index.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","layouts/HorizontalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js","utility/hooks/useSkin.js"],"names":["Avatar","forwardRef","props","ref","color","className","imgClassName","initials","size","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","Tag","tag","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","isUserLoggedIn","localStorage","getItem","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","AbilityContext","createContext","createContextualCan","Consumer","handleContentWidth","value","dispatch","type","handleMenuCollapsed","handleMenuHidden","LayoutWrapper","layout","children","appLayout","wrapperClass","transition","routeMeta","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Fragment","useEffect","menuCollapsed","menuHidden","query","length","Routes","path","component","lazy","meta","authRoute","BlankLayout","useSkin","useState","isMounted","setIsMounted","Customizer","skin","setSkin","isRtl","setIsRtl","setLayout","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isHidden","setIsHidden","setContentWidth","setMenuCollapsed","setTransition","openCustomizer","setOpenCustomizer","handleToggle","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","FormGroup","skinsArr","name","checked","map","radio","index","marginCondition","CustomInput","id","onChange","renderSkinsRadio","classNamePrefix","defaultValue","options","isClearable","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName","config","jwt","jwtOverrideConfig","jwtConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","axios","interceptors","request","use","accessToken","getToken","headers","Authorization","error","Promise","reject","response","originalRequest","refreshToken","then","r","setToken","data","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","filter","callback","setItem","args","post","getRefreshToken","UserDropdown","userData","setUserData","JSON","parse","userAvatar","avatar","defaultAvatar","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","Link","to","removeItem","NavbarUser","setMenuVisibility","NavItem","NavLink","Form","onSubmit","InputGroup","InputGroupAddon","addonType","InputGroupText","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","Input","borderTopRightRadius","borderBottomRightRadius","placeholder","ThemeNavbar","title","navLink","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","themeConfig","app","appLogoImage","appName","isNavLinkActive","link","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","result","getAllParents","obj","match","res","recurse","current","key","VerticalNavMenuLink","item","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","exact","strict","arr","parents","searchParents","disabled","active","target","newTab","isActive","url","resetActiveGroup","badge","Badge","VerticalNavMenuGroup","allParents","activeArr","includes","splice","indexOf","openArr","val","onCollapseClick","pop","toggleOpenGroup","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","wheelPropagation","onScrollY","container","scrollTop","classList","contains","add","remove","scrollMenu","useRTL","isRTL","element","document","getElementsByTagName","setAttribute","valueToStore","Function","handleRTL","console","log","useNavbarType","useFooterType","footer","useNavbarColor","VerticalLayout","menuVisibility","window","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","addEventListener","bgColorCondition","floating","sticky","static","hidden","Navbar","expand","light","dark","show","customizer","HorizontalNavMenuLink","setOpenDropdown","isChild","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","setMaxHeight","enabled","fn","stylesObj","pageHeight","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","popper","maxHeight","overflowY","ddRef","left","closest","styles","Dropdown","toggle","modifiers","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","pageYOffset","footerClasses","navbarClasses","Router","lastLayout","setLastLayout","handleLayout","useLayout","routerTransition","useRouterTransition","DefaultLayout","useContext","Layouts","NotAuthorized","Error","basename","process","render","Object","keys","LayoutTag","LayoutRoutes","LayoutPaths","route","LayoutRoutesAndPaths","assign","fallback","App","body","bordered","stringify"],"mappings":"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","file":"static/js/8.813e7f52.chunk.js","sourcesContent":["// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","export default __webpack_public_path__ + \"static/media/avatar-s-11.1d46cc62.jpg\";","// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return '/'\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n","// ** Imports createContext function\r\nimport { createContext } from 'react'\r\n\r\n// ** Imports createContextualCan function\r\nimport { createContextualCan } from '@casl/react'\r\n\r\n// ** Create Context\r\nexport const AbilityContext = createContext()\r\n\r\n// ** Init Can Context\r\nexport const Can = createContextualCan(AbilityContext.Consumer)\r\n","// ** Handles Layout Content Width (full / boxed)\r\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\r\n\r\n// ** Handles Menu Collapsed State (Bool)\r\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\r\n\r\n// ** Handles Menu Hidden State (Bool)\r\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\r\n\r\n// ** Handles RTL (Bool)\r\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\r\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n  const navbarStore = store.navbar\n  const contentWidth = store.layout.contentWidth\n\n  //** Vars\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth('full'))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [wrapperClass]: wrapperClass,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': !appLayout,\n          'content-area-wrapper': appLayout,\n          'container p-0': contentWidth === 'boxed',\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\n        })}\n      >\n        <Tag\n          /*eslint-disable */\n          {...(layout === 'HorizontalLayout' && !appLayout\n            ? { className: classnames({ 'content-body': !appLayout }) }\n            : {})}\n          /*eslint-enable */\n        >\n          {children}\n        </Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default LayoutWrapper\n","import { lazy } from 'react'\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - Vuexy React Admin Template'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/dashboard'\r\n\r\n// ** Merge Routes\r\nconst Routes = [\r\n  {\r\n    path: '/dashboard',\r\n    component: lazy(() => import('../../views/dashboard'))\r\n  },\r\n  {\r\n    path: '/login',\r\n    component: lazy(() => import('../../views/Login')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/error',\r\n    component: lazy(() => import('../../views/Error')),\r\n    layout: 'BlankLayout'\r\n  }\r\n\r\n]\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes }\r\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\nconst BlankLayout = ({ children, ...rest }) => {\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div className='blank-page'>\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { Settings, X } from 'react-feather'\nimport { CustomInput, FormGroup } from 'reactstrap'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { selectThemeColors } from '@utils'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    setSkin,\n    isRtl,\n    setIsRtl,\n    layout,\n    setLayout,\n    navbarType,\n    setNavbarType,\n    footerType,\n    setFooterType,\n    navbarColor,\n    setNavbarColor,\n    isHidden,\n    setIsHidden,\n    contentWidth,\n    setContentWidth,\n    menuCollapsed,\n    setMenuCollapsed,\n    transition,\n    setTransition\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setSkin(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setNavbarType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={`footer-${radio.name}`}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setFooterType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // **  Router Transition Options\n  const transitionOptions = [\n    { value: 'fadeIn', label: 'Fade' },\n    { value: 'fadeInLeft', label: 'Fade In Left' },\n    { value: 'zoomIn', label: 'Zoom In' },\n    { value: 'none', label: 'None' }\n  ]\n\n  // ** Get Current Transition\n  const transitionValue = transitionOptions.find(i => i.value === transition)\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content'>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Content Width</p>\n            <div className='d-flex'>\n              <CustomInput\n                type='radio'\n                id='full-width'\n                className='mr-1'\n                label='Full Width'\n                checked={contentWidth === 'full'}\n                onChange={() => setContentWidth('full')}\n              />\n              <CustomInput\n                type='radio'\n                id='boxes'\n                label='Boxed'\n                checked={contentWidth === 'boxed'}\n                onChange={() => setContentWidth('boxed')}\n              />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex'>\n              <p className='font-weight-bold mr-auto mb-0'>RTL</p>\n              <CustomInput type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='font-weight-bold mb-0'>Router Transition</p>\n              <Select\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                defaultValue={transitionOptions[0]}\n                value={transitionValue}\n                options={transitionOptions}\n                isClearable={false}\n                onChange={({ value }) => setTransition(value)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='font-weight-bold'>Menu Layout</p>\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <CustomInput\n                type='radio'\n                id='vertical-layout'\n                label='Vertical'\n                checked={layout === 'VerticalLayout'}\n                onChange={() => setLayout('vertical')}\n                className='mr-1'\n              />\n              <CustomInput\n                type='radio'\n                id='horizontal-layout'\n                label='Horizontal'\n                checked={layout === 'HorizontalLayout'}\n                onChange={() => setLayout('horizontal')}\n              />\n            </div>\n          </FormGroup>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <div className='d-flex align-items-center'>\n                <p className='font-weight-bold mr-auto mb-0'>Menu Collapsed</p>\n                <CustomInput\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <p className='font-weight-bold mr-auto mb-0'>Menu Hidden</p>\n              <CustomInput\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <p className='font-weight-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </FormGroup>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** Auth Endpoints\r\nexport default {\r\n  loginEndpoint: '/jwt/login',\r\n  registerEndpoint: '/jwt/register',\r\n  refreshEndpoint: '/jwt/refresh-token',\r\n  logoutEndpoint: '/jwt/logout',\r\n\r\n  // ** This will be prefixed in authorization header with token\r\n  // ? e.g. Authorization: Bearer <token>\r\n  tokenType: 'Bearer',\r\n\r\n  // ** Value of this property will be used as key to store JWT token in storage\r\n  storageTokenKeyName: 'accessToken',\r\n  storageRefreshTokenKeyName: 'refreshToken'\r\n}\r\n","// ** Core JWT Import\r\nimport useJwt from '@src/@core/auth/jwt/useJwt'\r\n\r\nconst { jwt } = useJwt({})\r\n\r\nexport default jwt\r\n","// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\n\nconst config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken))\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n","// ** JWT Service Import\r\nimport JwtService from './jwtService'\r\n\r\n// ** Export Service as useJwt\r\nexport default function useJwt(jwtOverrideConfig) {\r\n  const jwt = new JwtService(jwtOverrideConfig)\r\n\r\n  return {\r\n    jwt\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport jwtDefaultConfig from './jwtDefaultConfig'\r\n\r\nexport default class JwtService {\r\n  // ** jwtConfig <= Will be used by this service\r\n  jwtConfig = { ...jwtDefaultConfig }\r\n\r\n  // ** For Refreshing Token\r\n  isAlreadyFetchingAccessToken = false\r\n\r\n  // ** For Refreshing Token\r\n  subscribers = []\r\n\r\n  constructor(jwtOverrideConfig) {\r\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\r\n\r\n    // ** Request Interceptor\r\n    axios.interceptors.request.use(\r\n      config => {\r\n        // ** Get token from localStorage\r\n        const accessToken = this.getToken()\r\n\r\n        // ** If token is present add it to request's Authorization Header\r\n        if (accessToken) {\r\n          // ** eslint-disable-next-line no-param-reassign\r\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n        }\r\n        return config\r\n      },\r\n      error => Promise.reject(error)\r\n    )\r\n\r\n    // ** Add request/response interceptor\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        // ** const { config, response: { status } } = error\r\n        const { config, response } = error\r\n        const originalRequest = config\r\n\r\n        // ** if (status === 401) {\r\n        if (response && response.status === 401) {\r\n          if (!this.isAlreadyFetchingAccessToken) {\r\n            this.isAlreadyFetchingAccessToken = true\r\n            this.refreshToken().then(r => {\r\n              this.isAlreadyFetchingAccessToken = false\r\n\r\n              // ** Update accessToken in localStorage\r\n              this.setToken(r.data.accessToken)\r\n              this.setRefreshToken(r.data.refreshToken)\r\n\r\n              this.onAccessTokenFetched(r.data.accessToken)\r\n            })\r\n          }\r\n          const retryOriginalRequest = new Promise(resolve => {\r\n            this.addSubscriber(accessToken => {\r\n              // ** Make sure to assign accessToken according to your response.\r\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\r\n              // ** Change Authorization header\r\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n              resolve(this.axios(originalRequest))\r\n            })\r\n          })\r\n          return retryOriginalRequest\r\n        }\r\n        return Promise.reject(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  onAccessTokenFetched(accessToken) {\r\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\r\n  }\r\n\r\n  addSubscriber(callback) {\r\n    this.subscribers.push(callback)\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\r\n  }\r\n\r\n  setToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\r\n  }\r\n\r\n  setRefreshToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\r\n  }\r\n\r\n  login(...args) {\r\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\r\n  }\r\n\r\n  register(...args) {\r\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\r\n  }\r\n\r\n  refreshToken() {\r\n    return axios.post(this.jwtConfig.refreshEndpoint, {\r\n      refreshToken: this.getRefreshToken()\r\n    })\r\n  }\r\n}\r\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { handleLogout } from '@store/actions/auth'\n\n// ** Third Party Components\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power, ChevronDown, ChevronsDown, Bell } from 'react-feather'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\nconst UserDropdown = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** State\n  const [userData, setUserData] = useState(null)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n  //** Vars\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\n\n  return (\n    <Fragment>\n      <Power className='mx-1' />\n      <MessageSquare className='mx-1'/>\n      <Bell  className='ml-1 mr-5'/>\n      <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n        <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n          <Avatar img={userAvatar} imgHeight='40' imgWidth='40' />\n          <div className=''>\n            <span className='user-name font-weight-bold'>Hello, {(userData && userData['username']) || 'Rohit Sharma'}</span>\n            <span>\n              <ChevronDown />\n            </span>\n          </div>\n        </DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n            <User size={14} className='mr-75' />\n            <span className='align-middle'>Profile</span>\n          </DropdownItem>\n          <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n            <Mail size={14} className='mr-75' />\n            <span className='align-middle'>Inbox</span>\n          </DropdownItem>\n          <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n            <CheckSquare size={14} className='mr-75' />\n            <span className='align-middle'>Tasks</span>\n          </DropdownItem>\n          <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n            <MessageSquare size={14} className='mr-75' />\n            <span className='align-middle'>Chats</span>\n          </DropdownItem>\n          <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\n            <Power size={14} className='mr-75' />\n            <span className='align-middle'>Logout</span>\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    </Fragment>\n  )\n}\n\nexport default UserDropdown\n","// ** Dropdowns Imports\nimport { Fragment } from 'react'\n\nimport UserDropdown from './UserDropdown'\n\n// ** Third Party Components\nimport { Sun, Moon, Menu, Search } from 'react-feather'\nimport { Form, Input, InputGroup, InputGroupAddon, InputGroupText, NavItem, NavLink } from 'reactstrap'\nimport Autocomplete from '../../../components/autocomplete'\n\nconst NavbarUser = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  const inputControlStyle = {\n    borderTopRightRadius: '50px',\n    borderBottomRightRadius: '50px',\n    backgroundColor: '#eeeeee'\n  }\n\n  const searchIconStyle = {\n    borderTopLeftRadius: '50px',\n    borderBottomLeftRadius: '50px',\n    backgroundColor: '#eeeeee'\n  }\n\n  return (\n    <Fragment>\n      <ul className='navbar-nav d-xl-none d-flex align-items-center'>\n        <NavItem className='mobile-menu mr-auto'>\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n            <Menu className='ficon' />\n          </NavLink>\n        </NavItem>\n      </ul>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <NavItem className='d-none d-lg-block'>\n          <NavLink className='nav-link-style'>\n            <Form onSubmit={e => e.preventDefault()}>\n              <InputGroup className='input-group-merge'>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText style={searchIconStyle}>\n                    <Search size={14} />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input style={inputControlStyle} placeholder='Type in to search' />\n              </InputGroup>\n            </Form>\n          </NavLink>\n        </NavItem>\n      </div>\n      <ul className='nav navbar-nav align-items-center ml-auto'>\n        <UserDropdown />\n      </ul>\n    </Fragment>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  return (\n    <Fragment>\n      <NavbarUser skin={skin} setSkin={setSkin} setMenuVisibility={setMenuVisibility} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","import { Mail, Home } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'dashboard',\r\n    title: 'Dashboard',\r\n    icon: <Home size={20} />,\r\n    navLink: '/dashboard'\r\n  }\r\n]\r\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Disc, X, Circle } from 'react-feather'\n\n// ** Config\nimport themeConfig from '@configs/themeConfig'\n\nconst VerticalMenuHeader = props => {\n  // ** Props\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className='navbar-header'>\n      <ul className='nav navbar-nav flex-row'>\n        <li className='nav-item mr-auto'>\n          <NavLink to='/' className='navbar-brand'>\n            <span className='brand-logo'>\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\n            </span>\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className='nav-item nav-toggle'>\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\n            <Toggler />\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n// export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\n\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n// export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\n  return children.some(child => {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children, currentURL, routerProps)\n    }\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\n  })\n}\n\n/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */\n// export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\n\nexport const search = (navigation, currentURL, routerProps) => {\n  let result\n  navigation.some(child => {\n    let children\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\n      return (result = {\n        id: child.id,\n        children\n      })\n    }\n\n    // else it's link => Check for matched Route\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\n      return (result = {\n        id: child.id\n      })\n    }\n  })\n  return result\n}\n\n/**\n * Loop through nested object\n * @param {object} obj nested object\n */\nexport const getAllParents = (obj, match) => {\n  const res = []\n  const recurse = (obj, current) => {\n    for (const key in obj) {\n      const value = obj[key]\n      if (value !== undefined) {\n        if (value && typeof value === 'object') {\n          recurse(value, key)\n        } else {\n          if (key === match) {\n            res.push(value)\n          }\n        }\n      }\n    }\n  }\n  recurse(obj)\n  return res\n}\n\nexport const canViewMenuGroup = item => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = item => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\n// ** Vertical Menu Array Of Items\nimport navigation from '@src/navigation/vertical'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuLink = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  toggleActiveGroup,\n  parentItem,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  // ** To match path\n  const match = matchPath(currentURL, {\n    path: `${item.navLink}/:param`,\n    exact: true,\n    strict: false\n  })\n\n  // ** Search for current item parents\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    return allParents\n  }\n\n  // ** URL Vars\n  const resetActiveGroup = navLink => {\n    const parents = search(navigation, navLink, match)\n    toggleActiveGroup(item.id, parents)\n  }\n\n  // ** Reset Active & Open Group Arrays\n  const resetActiveAndOpenGroups = () => {\n    setGroupActive([])\n    setGroupOpen([])\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n        onClick={e => {\n          if (!item.navLink.length) {\n            e.preventDefault()\n          }\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  parentItem,\n  menuCollapsed,\n  menuHover,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggles Open Group\n  const toggleOpenGroup = (item, parentItem) => {\n    let openArr = groupOpen\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      allParents.pop()\n    }\n\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\n    } else {\n      openArr = []\n      if (!groupOpen.includes(item)) {\n        openArr.push(item)\n      }\n    }\n\n    // ** Set Open Group\n    setGroupOpen([...openArr])\n  }\n\n  // ** Toggle Active Group\n  const toggleActiveGroup = (item, parentItem) => {\n    let activeArr = groupActive\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      activeArr = allParents\n    } else {\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\n    }\n\n    // ** Set open group removing any activegroup item present in opengroup state\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\n    setGroupOpen([...openArr])\n\n    // **  Set Active Group\n    setGroupActive([...activeArr])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\n      toggleActiveGroup(item.id)\n    } else {\n      toggleOpenGroup(item.id, parentItem)\n    }\n\n    e.preventDefault()\n  }\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            toggleActiveGroup={toggleActiveGroup}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            routerProps={routerProps}\n            currentActiveItem={currentActiveItem}\n            activeItem={activeItem}\n            setActiveItem={setActiveItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\n  return (\n    <li className='navigation-header'>\n      <span>{item.header}</span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\n\n// ** Utils\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst VerticalMenuNavItems = props => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuSectionHeader,\n    VerticalNavMenuGroup,\n    VerticalNavMenuLink\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Vertical Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    if (menuCollapsed) {\n      setMenuHover(true)\n    }\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu(props)\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n            {/* Vertical Menu Header Shadow */}\n            <div className='shadow-bottom' ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className='main-menu-content'\n              options={{ wheelPropagation: false }}\n              onScrollY={container => scrollMenu(container)}\n            >\n              <ul className='navigation navigation-main'>\n                <VerticalNavMenuItems\n                  items={navigation}\n                  groupActive={groupActive}\n                  setGroupActive={setGroupActive}\n                  activeItem={activeItem}\n                  setActiveItem={setActiveItem}\n                  groupOpen={groupOpen}\n                  setGroupOpen={setGroupOpen}\n                  routerProps={routerProps}\n                  menuCollapsed={menuCollapsed}\n                  menuHover={menuHover}\n                  currentActiveItem={currentActiveItem}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/actions/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(isRtl) : value\r\n      dispatch(handleRTL(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** State\r\n  const [navbarType, setNavbarType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarType) : value\r\n\r\n      // ** Set state\r\n      setNavbarType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarType, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useFooterType = () => {\r\n  // ** State\r\n  const [footerType, setFooterType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.footer.type\r\n    } catch (error) {\r\n      // ** If error also initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.footer.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(footerType) : value\r\n\r\n      // ** Set state\r\n      setFooterType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [footerType, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** State\r\n  const [navbarColor, setNavbarColor] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\r\n\r\n      // ** Set state\r\n      setNavbarColor(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarColor, setValue]\r\n}\r\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n  const isHidden = layoutStore.menuHidden\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n          routerProps={routerProps}\n          currentActiveItem={currentActiveItem}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? (\n            navbar({ setMenuVisibility, skin, setSkin })\n          ) : (\n            <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\n          )}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          menuCollapsed={menuCollapsed}\n          setMenuCollapsed={setMenuCollapsed}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      {/* <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      > */}\n      {/* {footer ? (\n          footer({ footerType, footerClasses })\n        ) : (\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\n        )} */}\n      {/* </footer> */}\n\n      {/* {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null} */}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\n// ** Components\n// import CustomMenu from './components/Menu'\n// import CustomNavbar from './components/Navbar'\n// import CustomFooter from './components/Footer'\n\nconst VerticalLayout = props => (\n  <Layout\n    // menu={props => <CustomMenu {...props} />}\n    // navbar={props => <CustomNavbar {...props} />}\n    // footer={props => <CustomFooter {...props} />}\n    {...props}\n  >\n    {props.children}\n  </Layout>\n)\n\nexport default VerticalLayout\n","import { Mail, Home } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'home',\r\n    title: 'Home',\r\n    icon: <Home size={20} />,\r\n    navLink: '/home'\r\n  },\r\n  {\r\n    id: 'secondPage',\r\n    title: 'Second Page',\r\n    icon: <Mail size={20} />,\r\n    navLink: '/second-page'\r\n  }\r\n]\r\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\n\n// ** Horizontal menu items array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst HorizontalNavMenuLink = ({\n  item,\n  setOpenDropdown,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  routerProps,\n  currentActiveItem,\n  isChild\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\n\n  // ** Get parents of current items\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    allParents.pop()\n    return allParents\n  }\n\n  // ** Remove all items from OpenDropdown array\n  const resetOpenDropdowns = () => setOpenDropdown([])\n\n  // ** On mount update active group array\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames('nav-item', {\n        active: item.navLink === activeItem,\n        disabled: item.disabled\n      })}\n      onClick={resetOpenDropdowns}\n    >\n      <LinkTag\n        className={classnames('d-flex align-items-center', {\n          'dropdown-item': isChild,\n          'nav-link': !isChild\n        })}\n        tag={LinkTag}\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\n\n// ** Utils\nimport { isNavGroupActive } from '@layouts/utils'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const {\n    item,\n    submenu,\n    groupActive,\n    onMouseEnter,\n    onMouseLeave,\n    openDropdown,\n    setGroupActive,\n    activeItem,\n    setActiveItem,\n    routerProps,\n    setOpenDropdown,\n    currentActiveItem\n  } = props\n\n  // ** URL Var\n  const currentURL = useLocation().pathname\n\n  // ** Dropdown menu modifiers\n  const menuModifiers = {\n    setMaxHeight: {\n      enabled: true,\n      fn: data => {\n        const pageHeight = window.innerHeight,\n          ddTop = data.instance.reference.getBoundingClientRect().top,\n          ddHeight = data.popper.height\n        let maxHeight, stylesObj\n\n        // ** Calculate and set height\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\n          maxHeight = pageHeight - ddTop - 25\n          stylesObj = {\n            maxHeight,\n            overflowY: 'auto'\n          }\n        }\n\n        const ddRef = data.instance.popper.getBoundingClientRect()\n\n        // ** If there is not space left to open sub menu open it to the right\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\n        }\n\n        return {\n          ...data,\n          styles: {\n            ...stylesObj\n          }\n        }\n      }\n    }\n  }\n  return (\n    <Dropdown\n      tag='li'\n      className={classnames({\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active':\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\n      })}\n      isOpen={openDropdown.includes(item.id)}\n      toggle={() => onMouseEnter(item.id)}\n      onMouseEnter={() => onMouseEnter(item.id)}\n      onMouseLeave={() => onMouseLeave(item.id)}\n    >\n      <DropdownToggle\n        to='/'\n        tag={Link}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n        onClick={e => e.preventDefault()}\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </DropdownToggle>\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\n        <HorizontalNavMenuItems\n          submenu={true}\n          parentItem={item}\n          items={item.children}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          openDropdown={openDropdown}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          isChild={true}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst HorizontalNavMenuItems = props => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Horizontal Menu Array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalMenu = ({ currentActiveItem, routerProps }) => {\n  // ** States\n  const [activeItem, setActiveItem] = useState(null)\n  const [groupActive, setGroupActive] = useState([])\n  const [openDropdown, setOpenDropdown] = useState([])\n\n  // ** On mouse enter push the ID to openDropdown array\n  const onMouseEnter = id => {\n    const arr = openDropdown\n    arr.push(id)\n    setOpenDropdown([...arr])\n  }\n\n  // ** On mouse leave remove the ID to openDropdown array\n  const onMouseLeave = id => {\n    const arr = openDropdown\n    arr.splice(arr.indexOf(id), 1)\n    setOpenDropdown([...arr])\n  }\n\n  return (\n    <div className='navbar-container main-menu-content'>\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\n        <HorizontalNavMenuItems\n          submenu={false}\n          items={navigation}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          openDropdown={openDropdown}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, currentActiveItem, routerProps } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      <Navbar\n        expand='lg'\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            {menu ? (\n              menu({ routerProps, currentActiveItem })\n            ) : (\n              <MenuComponent routerProps={routerProps} currentActiveItem={currentActiveItem} />\n            )}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {/* {footer ? (\n          footer({ footerType, footerClasses })\n        ) : (\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\n        )} */}\n      </footer>\n\n      {/* {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null} */}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/HorizontalLayout'\n\n// ** Components\n// import CustomMenu from './components/Menu'\n// import CustomNavbar from './components/Navbar'\n// import CustomFooter from './components/Footer'\n\nconst HorizontalLayout = props => (\n  <Layout\n    // menu={props => <CustomMenu {...props} />}\n    // navbar={props => <CustomNavbar {...props} />}\n    // footer={props => <CustomFooter {...props} />}\n    {...props}\n  >\n    {props.children}\n  </Layout>\n)\n\nexport default HorizontalLayout\n","// ** React Imports\r\nimport { Suspense, useContext, lazy } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/' />\r\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\r\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n      return <Redirect to='/misc/not-authorized' />\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                  appLayout: route.appLayout\r\n                                }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                  routeMeta: route.meta\r\n                                }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                  wrapperClass: route.className\r\n                                }\r\n                              : {})}\r\n                            /*eslint-enable */\r\n                          >\r\n                            <route.component {...props} />\r\n                            {/* <FinalRoute route={route} {...props} /> */}\r\n                          </LayoutWrapper>\r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        {/* <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        /> */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return <Redirect to={DefaultRoute} />\r\n          }}\r\n        />\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />/\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useLayout = () => {\r\n  // ** States\r\n  const [lastLayout, setLastLayout] = useState(null)\r\n  const [layout, setLayout] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(layout) : value\r\n\r\n      // ** Set state\r\n      setLayout(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleLayout = () => {\r\n    // ** If layout is horizontal & screen size is equals to or below 1200\r\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\r\n      setLayout('vertical')\r\n      setLastLayout('horizontal')\r\n    }\r\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n      setLayout('horizontal')\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    handleLayout()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // ** Window Resize Event\r\n    window.addEventListener('resize', handleLayout)\r\n  }, [layout, lastLayout])\r\n\r\n  return [layout, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** State\r\n  const [transition, setTransition] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.routerTransition\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.routerTransition\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(transition) : value\r\n\r\n      // ** Set state\r\n      setTransition(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [transition, setValue]\r\n}\r\n","// ** Router Import\r\nimport Router from './router/Router'\r\n\r\nconst App = props => <Router />\r\n\r\nexport default App\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useSkin = () => {\r\n  // ** State\r\n  const [skin, setSkin] = useState(() => {\r\n    try {\r\n      // ** Get from local storage by key\r\n      const item = window.localStorage.getItem('skin')\r\n      // ** Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : themeConfig.layout.skin\r\n    } catch (error) {\r\n      // ** If error also return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.skin\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(skin) : value\r\n      // ** Set state\r\n      setSkin(valueToStore)\r\n      // ** Save to local storage\r\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (skin !== 'light') {\r\n      element.classList.add(classNames[skin])\r\n    }\r\n  }, [skin])\r\n\r\n  return [skin, setValue]\r\n}\r\n"],"sourceRoot":""}